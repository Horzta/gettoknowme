{"version":3,"sources":["assets/images/self_portrait.jpg","components/ExperienceComponents/PositionComponent.js","components/ExperienceComponents/ExperienceComponent.js","components/ExperienceComponents/ExperienceSegment.js","components/SkillsComponents/SubskillComponent.js","components/SkillsComponents/SkillComponent.js","components/SkillsComponents/CategoryComponent.js","components/SkillsComponents/SkillSegment.js","components/GeneralComponents/ContactMeComponent.js","components/IndexComponents/IndexSegment.js","components/IndexComponents/IndexPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PositionComponent","position","this","props","Grid","Row","columns","Column","Header","size","content","name","textAlign","color","start","end","List","points","map","point","Item","icon","React","Component","ExperienceComponent","company","Container","positions","companies","experiencesjson","ExperienceSegment","console","log","Segment","SubskillComponent","subskill","Content","label","moment","start_date","fromNow","replace","SkillComponent","skill","Fragment","Group","subskills","CategoryComponent","category","divided","skills","categories","skillsjson","SkillSegment","frontend","backend","devtools","softskills","ContactMeComponent","Subheader","verticalAlign","Icon","href","target","IndexSegment","className","Image","src","self_portrait","centered","circular","fitted","stackable","width","text","IndexPage","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2503be7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/self_portrait.26c0657d.jpg\";","import React from 'react';\r\nimport { Grid, Header, List } from 'semantic-ui-react';\r\n\r\nclass PositionComponent extends React.Component {\r\n    render () {\r\n        const { position } = this.props;\r\n        return (\r\n            <Grid>\r\n                <Grid.Row columns={2}>\r\n                    <Grid.Column >\r\n                        <Header size=\"tiny\" content={position.name}/>                        \r\n                    </Grid.Column>\r\n                    <Grid.Column textAlign=\"right\">\r\n                        <Header size=\"tiny\" color=\"grey\">\r\n                            {position.start} - {position.end}\r\n                        </Header> \r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row columns={1}>\r\n                    <Grid.Column>\r\n                        <List>\r\n                            {position.points.map(point=><List.Item icon=\"star\" content={point}/>)}\r\n                        </List>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PositionComponent;","import React from 'react';\r\nimport { Header, Container } from 'semantic-ui-react';\r\nimport PositionComponent from './PositionComponent';\r\n\r\nclass ExperienceComponent extends React.Component {\r\n    render () {\r\n        const { company } = this.props;\r\n        return (\r\n            <Container>\r\n                <Header content={company.name}/>\r\n                {company.positions.map(position=><PositionComponent position={position}/>)}\r\n                <br/><br/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExperienceComponent;","import React from 'react';\r\nimport { Header, Segment } from 'semantic-ui-react';\r\nimport experiencesjson from '../../assets/experiencesjson.json';\r\nimport ExperienceComponent from './ExperienceComponent';\r\n\r\n\r\nconst { companies } = experiencesjson;\r\n\r\nclass ExperienceSegment extends React.Component {\r\n    render () {\r\n        console.log(companies);\r\n        return (\r\n                <Segment>\r\n                    <Header size=\"large\">Experience</Header>\r\n                    {companies.map(company=><ExperienceComponent company={company}/>)}\r\n                </Segment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExperienceSegment;","import moment from 'moment';\r\nimport React from 'react';\r\nimport { Grid, Header, Item } from 'semantic-ui-react';\r\n\r\nclass SubskillComponent extends React.Component {\r\n    render () {\r\n        const { subskill } = this.props;\r\n\r\n        return (\r\n            <Item>\r\n                <Item.Content>\r\n                    <Grid columns={2}>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header size=\"tiny\">{ subskill.label }</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <Header size=\"tiny\" color=\"grey\" textAlign=\"right\">\r\n                                    {moment(subskill.start_date,\"MM/DD/YYYY\").fromNow().replace(\"ago\",\" exp\").replace(\"a \", \"1 \")}\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Item.Content>\r\n            </Item>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubskillComponent;","import React from 'react';\r\nimport SubskillComponent from './SubskillComponent';\r\nimport { Item } from 'semantic-ui-react';\r\n\r\nclass SkillComponent extends React.Component {\r\n\r\n    render () {\r\n        const { skill } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Item.Group>\r\n                    { skill.subskills.map(subskill =>  <SubskillComponent subskill={subskill} />) }\r\n                </Item.Group>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SkillComponent;","import React from 'react';\r\nimport { Grid, Header } from 'semantic-ui-react';\r\nimport SkillComponent from './SkillComponent';\r\n\r\nclass CategoryComponent extends React.Component {\r\n\r\n    render() {\r\n        const { category } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header size=\"medium\" content={category.label}/>\r\n                <Grid divided>\r\n                    <Grid.Row columns={3}>\r\n                        {category.skills.map(skill => <Grid.Column><SkillComponent skill={skill}/></Grid.Column>)}\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryComponent;","import React from 'react';\r\nimport { Segment, Item, Header } from 'semantic-ui-react';\r\nimport skillsjson from '../../assets/skillsjson.json';\r\nimport CategoryComponent from './CategoryComponent';\r\n\r\n\r\nconst { categories } = skillsjson;\r\n\r\n\r\nclass SkillSegment extends React.Component {\r\n    render () {\r\n        return (\r\n            <Segment>\r\n                <Header size=\"large\">Skills</Header>\r\n                <Item.Group>\r\n                    <CategoryComponent category={categories.frontend} />\r\n                    <CategoryComponent category={categories.backend} />\r\n                    <CategoryComponent category={categories.devtools} />\r\n                    <CategoryComponent category={categories.softskills} />\r\n                </Item.Group>\r\n            </Segment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SkillSegment;","import React from 'react';\r\nimport { Header, Item, Icon } from 'semantic-ui-react';\r\n\r\n\r\nclass ContactMeComponent extends React.Component {\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <Header size=\"medium\">Want to Hire me?\r\n                    <Header.Subheader>You can contact me thru:</Header.Subheader>\r\n                </Header>\r\n                <Item.Group divided>\r\n                    <Item>\r\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\r\n                            <Icon name=\"google\"/> <a href=\"mailto:horzta@gmail.com\">horzta@gmail.com</a>\r\n                        </Item.Content>\r\n                    </Item>\r\n                    <Item>\r\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\r\n                            <Icon name=\"yahoo\"/> <a href=\"mailto:heahora@yahoo.com\">heahora@yahoo.com</a>\r\n                        </Item.Content>\r\n                    </Item>\r\n                    <Item>\r\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\r\n                            <Icon name=\"linkedin\"/>\r\n                            <a href=\"https://www.linkedin.com/in/akira-hora-619525ba/\" target=\"_blankk\">LinkedIn</a>\r\n                        </Item.Content>\r\n                    </Item>\r\n                    <Item>\r\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\r\n                            <Icon name=\"facebook\"/>\r\n                            <a href=\"https://www.facebook.com/horztashi.sensei\" target=\"_blankk\">Facebook</a>\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactMeComponent;","import React from 'react';\r\nimport { Container, Image, Header, Segment, Grid, Icon } from 'semantic-ui-react';\r\nimport  self_portrait  from '../../assets/images/self_portrait.jpg';\r\nimport ContactMeComponent from '../GeneralComponents/ContactMeComponent';\r\n\r\nclass IndexSegment extends React.Component{\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Segment className=\"header-segment\" textAlign=\"center\">\r\n                    <Image src={self_portrait} size=\"medium\" verticalAlign=\"center\" centered circular/>\r\n                    <Header className=\"header-text\" size=\"huge\">\r\n                        Horst Erich <span className=\"header-akira\">Akira</span> Hora\r\n                        <Header.Subheader className=\"header-text\">\r\n                            <div>Fullstack Software Developer</div>\r\n                            <div><Icon name=\"map marker alternate\" fitted/>&nbsp;Caloocan City, Philippines</div>                                \r\n                        </Header.Subheader>\r\n                    </Header>\r\n                </Segment>\r\n                <Segment>\r\n                    <Grid stackable>\r\n                        <Grid.Row>\r\n                            <Grid.Column width=\"13\" textAlign=\"center\">\r\n                                <Header size=\"huge\">\r\n                                    Hey there!\r\n                                    <Header.Subheader>\r\n                                        So you want to know me?\r\n                                    </Header.Subheader>\r\n                                </Header>\r\n                                <Container text>\r\n                                    <p className=\"about-me-p\">\r\n                                        An all around web developer with good knowledge of multiple programming languages. \r\n                                        I love spending time planning maintainable code and discussing best practices. \r\n                                        I can work alone and within a team. I can do web design and frontend development \r\n                                        (this whole thing is actually written in React), but I work best with logic crunching \r\n                                        backend development.\r\n                                    </p>\r\n                                </Container>\r\n                            </Grid.Column>\r\n                            <Grid.Column width=\"3\">\r\n                                <ContactMeComponent/>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndexSegment;","import React from 'react';\r\nimport { Container, Segment } from 'semantic-ui-react';\r\nimport ExperienceSegment from '../ExperienceComponents/ExperienceSegment';\r\nimport SkillSegment from '../SkillsComponents/SkillSegment';\r\nimport IndexSegment from './IndexSegment';\r\n\r\nclass IndexPage extends React.Component{\r\n    render () {\r\n\r\n        return (\r\n            <Container>\r\n                <Segment.Group>\r\n                    <IndexSegment/>\r\n                    <SkillSegment/>\r\n                    <ExperienceSegment/>\r\n                </Segment.Group>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndexPage;","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport IndexPage from './components/IndexComponents/IndexPage';\r\n\r\nfunction App() {\r\n  var root = \"/gettoknowme\";\r\n\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path={root}>\r\n            <IndexPage />\r\n          </Route>\r\n        </Switch>\r\n    </Router>  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}