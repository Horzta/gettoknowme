{"version":3,"sources":["assets/images/self_portrait.jpg","components/GeneralComponents.js/ContactMeComponent.js","components/IndexComponents/IndexComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ContactMeComponent","Fragment","Header","size","Subheader","Item","Group","divided","Content","verticalAlign","textAlign","Icon","name","href","target","React","Component","IndexComponent","props","state","activeItem","this","Container","Segment","className","Image","src","self_portrait","centered","circular","fitted","Grid","stackable","Row","Column","width","Menu","fluid","secondary","vertical","active","content","onClick","handleItemClick","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f01b2769.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/self_portrait.26c0657d.jpg\";","import React from 'react';\r\nimport { Header, Item, Icon } from 'semantic-ui-react';\r\n\r\n\r\nclass ContactMeComponent extends React.Component {\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <Header size=\"medium\">Want to Hire me?\r\n                    <Header.Subheader>You can contact me thru:</Header.Subheader>\r\n                </Header>\r\n                <Item.Group divided>\r\n                    <Item>\r\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\r\n                            <Icon name=\"phone\"/> (+63) 908 412 4566\r\n                        </Item.Content>\r\n                    </Item>\r\n                    <Item>\r\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\r\n                            <Icon name=\"google\"/> <a href=\"mailto:horzta@gmail.com\">horzta@gmail.com</a>\r\n                        </Item.Content>\r\n                    </Item>\r\n                    <Item>\r\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\r\n                            <Icon name=\"yahoo\"/> <a href=\"mailto:heahora@yahoo.com\">heahora@yahoo.com</a>\r\n                        </Item.Content>\r\n                    </Item>\r\n                    <Item>\r\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\r\n                            <Icon name=\"linkedin\"/>\r\n                            <a href=\"https://www.linkedin.com/in/akira-hora-619525ba/\" target=\"_blankk\">LinkedIn</a>\r\n                        </Item.Content>\r\n                    </Item>\r\n                    <Item>\r\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\r\n                            <Icon name=\"facebook\"/>\r\n                            <a href=\"https://www.facebook.com/horztashi.sensei\" target=\"_blankk\">Facebook</a>\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactMeComponent;","import React from 'react';\r\nimport { Container, Image, Header, Segment, Grid, Item, Icon, Menu, } from 'semantic-ui-react';\r\nimport  self_portrait  from '../../assets/images/self_portrait.jpg';\r\nimport ContactMeComponent from '../GeneralComponents.js/ContactMeComponent';\r\n\r\nclass IndexComponent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { activeItem: \"personal\" }\r\n    }\r\n    render () {\r\n        const { activeItem } = this.state;\r\n\r\n        return (\r\n            <Container>\r\n                <Segment.Group>\r\n                    <Segment className=\"header-segment\" textAlign=\"center\">\r\n                        <Image src={self_portrait} size=\"medium\" verticalAlign=\"center\" centered circular/>\r\n                        <Header className=\"header-text\" size=\"huge\">\r\n                            Horst Erich <span className=\"header-akira\">Akira</span> Hora\r\n                            <Header.Subheader className=\"header-text\">\r\n                                <div>Fullstack Software Developer</div>\r\n                                <div><Icon name=\"map marker alternate\" fitted/>&nbsp;Pasig City, Philippines</div>                                \r\n                            </Header.Subheader>\r\n                        </Header>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Grid stackable>\r\n                            <Grid.Row>\r\n                                <Grid.Column width=\"3\">\r\n                                    <Menu fluid secondary vertical>\r\n                                        <Menu.Item\r\n                                        name='personal'\r\n                                        active={activeItem === 'personal'}\r\n                                        content=\"Basic\"\r\n                                        onClick={this.handleItemClick}\r\n                                        />\r\n                                        <Menu.Item\r\n                                        name='skill'\r\n                                        active={activeItem === 'settings'}\r\n                                        content=\"Skills\"\r\n                                        onClick={this.handleItemClick}\r\n                                        />\r\n                                        <Menu.Item\r\n                                        name='skill'\r\n                                        active={activeItem === 'settings'}\r\n                                        content=\"Experience\"\r\n                                        onClick={this.handleItemClick}\r\n                                        />\r\n                                    </Menu>\r\n                                </Grid.Column>\r\n                                <Grid.Column width=\"10\">\r\n                                    Hello\r\n                                </Grid.Column>\r\n                                <Grid.Column width=\"3\">\r\n                                    <ContactMeComponent/>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndexComponent;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport IndexComponent from './components/IndexComponents/IndexComponent';\n\nfunction App() {\n  var root = \"/gettoknowme\";\n\n  return (\n    <Router>\n        <Switch>\n          <Route path={root}>\n            <IndexComponent />\n          </Route>\n        </Switch>\n    </Router>  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}