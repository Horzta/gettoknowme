{"version":3,"sources":["helpers/DateHelper.js","components/ExperienceComponents/PositionComponent.js","components/ExperienceComponents/ExperienceComponent.js","components/ExperienceComponents/ExperienceSegment.js","helpers/SkillHelper.js","components/SkillsComponents/SubskillComponent.js","components/SkillsComponents/SkillComponent.js","components/SkillsComponents/CategoryComponent.js","components/SkillsComponents/SkillSegment.js","assets/images/self_portrait.jpg","components/GeneralComponents/ContactMeComponent.js","components/IndexComponents/IndexSegment.js","components/IndexComponents/IndexPage.js","App.js","serviceWorker.js","index.js"],"names":["monthNames","formatToMMMMYYYYfromString","date","Date","getMonth","getFullYear","PositionComponent","position","this","props","Grid","Row","columns","Column","Header","size","content","name","textAlign","color","start","end","List","points","map","point","Item","icon","React","Component","ExperienceComponent","company","Container","positions","companies","experiencesjson","ExperienceSegment","Segment","reverse","SubskillComponent","subskill","duration","applied","company_index","start_date","day_diff","getTime","days","years","months","hydrateSubskillDuration","Content","label","formattedDuration","push","join","formatDuration","SkillComponent","skill","Fragment","Group","subskills","CategoryComponent","category","divided","skills","categories","skillsjson","SkillSegment","frontend","backend","devtools","softskills","ContactMeComponent","Subheader","verticalAlign","Icon","href","target","IndexSegment","className","Image","src","self_portrait","centered","circular","fitted","stackable","width","text","IndexPage","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bdd76278.chunk.js","sourcesContent":["const monthNames = [\r\n    \"January\", \"February\", \"March\",\r\n    \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\",\r\n    \"October\", \"November\", \"December\"\r\n];\r\n\r\n\r\nexport function formatToMMMMYYYYfromString (date) {\r\n    date = new Date(date);\r\n\r\n    return monthNames[date.getMonth()] + \" \" + date.getFullYear();\r\n}","import React from 'react';\nimport { Grid, Header, List } from 'semantic-ui-react';\nimport { formatToMMMMYYYYfromString } from '../../helpers/DateHelper';\n\nclass PositionComponent extends React.Component {\n    render () {\n        const { position } = this.props;\n        return (\n            <Grid>\n                <Grid.Row columns={2}>\n                    <Grid.Column >\n                        <Header size=\"tiny\" content={position.name}/>                        \n                    </Grid.Column>\n                    <Grid.Column textAlign=\"right\">\n                        <Header size=\"tiny\" color=\"grey\">\n                            {formatToMMMMYYYYfromString(position.start)} - {position.end === \"present\" ? \"Present\" : formatToMMMMYYYYfromString(position.end)}\n                        </Header> \n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row columns={1}>\n                    <Grid.Column>\n                        <List>\n                            {position.points.map(point=><List.Item icon=\"star\" content={point}/>)}\n                        </List>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n}\n\nexport default PositionComponent;","import React from 'react';\nimport { Header, Container } from 'semantic-ui-react';\nimport PositionComponent from './PositionComponent';\n\nclass ExperienceComponent extends React.Component {\n    render () {\n        const { company } = this.props;\n        return (\n            <Container>\n                <Header content={company.name}/>\n                {company.positions.map(position=><PositionComponent position={position}/>)}\n                <br/><br/>\n            </Container>\n        );\n    }\n}\n\nexport default ExperienceComponent;","import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport experiencesjson from '../../assets/experiencesjson.json';\nimport ExperienceComponent from './ExperienceComponent';\n\n\nconst { companies } = experiencesjson;\n\nclass ExperienceSegment extends React.Component {\n    render () {\n        return (\n                <Segment>\n                    <Header size=\"large\">Experience</Header>\n                    {companies.reverse().map(company=><ExperienceComponent company={company}/>)}\n                </Segment>\n        );\n    }\n}\n\nexport default ExperienceSegment;","import experiencesjson from '../assets/experiencesjson.json';\r\n\r\nconst { companies } = experiencesjson;\r\n\r\nexport function hydrateSubskillDuration(subskill) {\r\n    let duration = {\r\n            'years'  : 0,\r\n            'months' : 0,\r\n            'days'   : 0\r\n        };\r\n    \r\n    // Get the total number of days\r\n    for (let company_index of subskill.applied) {\r\n        for (let position of companies[company_index].positions) {\r\n            let start_date = new Date(position.start);\r\n            let end_date   = position.end === \"present\" ? new Date() : new Date(position.end);\r\n            let time_diff  = end_date.getTime() - start_date.getTime();        \r\n            let day_diff   = time_diff / (1000 * 3600 * 24);\r\n    \r\n            duration.days = day_diff + duration.days;    \r\n        }\r\n    }\r\n    \r\n    // Get the years\r\n    while (duration.days >= 365) {\r\n        duration.days = duration.days - 365;\r\n        duration.years = duration.years + 1;\r\n    }\r\n\r\n    // Get the months\r\n    while (duration.days >= 30) {\r\n        duration.days = duration.days - 30;\r\n        duration.months = duration.months + 1;\r\n    }\r\n\r\n    subskill.duration = duration;\r\n    return subskill;\r\n}\r\n\r\n\r\nexport function formatDuration(duration) {\r\n    let formattedDuration = [];\r\n\r\n    if (duration.years === 1) formattedDuration.push(duration.years + \" year\");\r\n    if (duration.years > 1) formattedDuration.push(duration.years + \" years\");\r\n\r\n    if (duration.months === 1) formattedDuration.push(duration.months + \" month\");\r\n    if (duration.months > 1) formattedDuration.push(duration.months + \" months\");\r\n\r\n    if (duration.years === 0 && duration.months === 0) {\r\n        if(duration.days === 1) formattedDuration.push(duration.days + \" day\");\r\n        if(duration.days > 1) formattedDuration.push(duration.days + \" day(s)\");\r\n    }\r\n\r\n    return formattedDuration.join(\", \")\r\n}","import React from 'react';\nimport { Grid, Header, Item } from 'semantic-ui-react';\nimport { hydrateSubskillDuration, formatDuration } from '../../helpers/SkillHelper';\n\nclass SubskillComponent extends React.Component {\n    render () {\n        const subskill = hydrateSubskillDuration(this.props.subskill);\n        return (\n            <Item>\n                <Item.Content>\n                    <Grid columns={2}>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Header size=\"tiny\">{ subskill.label }</Header>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header size=\"tiny\" color=\"grey\" textAlign=\"right\">\n                                    {formatDuration(subskill.duration)}\n                                </Header>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Item.Content>\n            </Item>\n        );\n    }\n}\n\nexport default SubskillComponent;","import React from 'react';\nimport SubskillComponent from './SubskillComponent';\nimport { Item } from 'semantic-ui-react';\n\nclass SkillComponent extends React.Component {\n\n    render () {\n        const { skill } = this.props;\n\n        return (\n            <React.Fragment>\n                <Item.Group>\n                    { skill.subskills.map(subskill =>  <SubskillComponent subskill={subskill} />) }\n                </Item.Group>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default SkillComponent;","import React from 'react';\nimport { Grid, Header } from 'semantic-ui-react';\nimport SkillComponent from './SkillComponent';\n\nclass CategoryComponent extends React.Component {\n\n    render() {\n        const { category } = this.props;\n\n        return (\n            <React.Fragment>\n                <Header size=\"medium\" content={category.label}/>\n                <Grid divided>\n                    <Grid.Row columns={3}>\n                        {category.skills.map(skill => <Grid.Column><SkillComponent skill={skill}/></Grid.Column>)}\n                    </Grid.Row>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CategoryComponent;","import React from 'react';\nimport { Segment, Item, Header } from 'semantic-ui-react';\nimport skillsjson from '../../assets/skillsjson.json';\nimport CategoryComponent from './CategoryComponent';\n\n\nconst { categories } = skillsjson;\n\n\nclass SkillSegment extends React.Component {\n    render () {\n        return (\n            <Segment>\n                <Header size=\"large\">Skills</Header>\n                <Item.Group>\n                    <CategoryComponent category={categories.frontend} />\n                    <CategoryComponent category={categories.backend} />\n                    <CategoryComponent category={categories.devtools} />\n                    <CategoryComponent category={categories.softskills} />\n                </Item.Group>\n            </Segment>\n        );\n    }\n}\n\n\n\nexport default SkillSegment;","export default __webpack_public_path__ + \"static/media/self_portrait.a674cec1.jpg\";","import React from 'react';\nimport { Header, Item, Icon } from 'semantic-ui-react';\n\n\nclass ContactMeComponent extends React.Component {\n    render () {\n        return (\n            <React.Fragment>\n                <Header size=\"medium\">Want to Hire me?\n                    <Header.Subheader>You can contact me thru:</Header.Subheader>\n                </Header>\n                <Item.Group divided>\n                    <Item>\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\n                            <Icon name=\"google\"/> <a href=\"mailto:horzta@gmail.com\">horzta@gmail.com</a>\n                        </Item.Content>\n                    </Item>\n                    <Item>\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\n                            <Icon name=\"yahoo\"/> <a href=\"mailto:heahora@yahoo.com\">heahora@yahoo.com</a>\n                        </Item.Content>\n                    </Item>\n                    <Item>\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\n                            <Icon name=\"linkedin\"/>\n                            <a href=\"https://www.linkedin.com/in/akira-hora-619525ba/\" target=\"_blankk\">LinkedIn</a>\n                        </Item.Content>\n                    </Item>\n                    <Item>\n                        <Item.Content verticalAlign='middle' textAlign=\"center\">\n                            <Icon name=\"facebook\"/>\n                            <a href=\"https://www.facebook.com/horztashi.sensei\" target=\"_blankk\">Facebook</a>\n                        </Item.Content>\n                    </Item>\n                </Item.Group>                \n            </React.Fragment>\n        );\n    }\n}\n\nexport default ContactMeComponent;","import React from 'react';\nimport { Container, Image, Header, Segment, Grid, Icon } from 'semantic-ui-react';\nimport  self_portrait  from '../../assets/images/self_portrait.jpg';\nimport ContactMeComponent from '../GeneralComponents/ContactMeComponent';\n\nclass IndexSegment extends React.Component{\n    render() {\n        return (\n            <React.Fragment>\n                <Segment className=\"header-segment\" textAlign=\"center\">\n                    <Image src={self_portrait} size=\"medium\" verticalAlign=\"center\" centered circular/>\n                    <Header className=\"header-text\" size=\"huge\">\n                        Horst Erich <span className=\"header-akira\">Akira</span> Hora\n                        <Header.Subheader className=\"header-text\">\n                            <div>Fullstack Software Developer</div>\n                            <div><Icon name=\"map marker alternate\" fitted/>&nbsp;Caloocan City, Philippines</div>                                \n                        </Header.Subheader>\n                    </Header>\n                </Segment>\n                <Segment>\n                    <Grid stackable>\n                        <Grid.Row>\n                            <Grid.Column width=\"13\" textAlign=\"center\">\n                                <Header size=\"huge\">\n                                    Hey there!\n                                    <Header.Subheader>\n                                        So you want to know me?\n                                    </Header.Subheader>\n                                </Header>\n                                <Container text>\n                                    <p className=\"about-me-p\">\n                                        An all around web developer with good knowledge of multiple programming languages. \n                                        I love spending time planning maintainable code and discussing best practices. \n                                        I can work alone and within a team. I can do web design and frontend development \n                                        (this whole thing is actually written in React), but I work best with logic crunching \n                                        backend development.\n                                    </p>\n                                </Container>\n                            </Grid.Column>\n                            <Grid.Column width=\"3\">\n                                <ContactMeComponent/>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Segment>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default IndexSegment;","import React from 'react';\nimport { Container, Segment } from 'semantic-ui-react';\nimport ExperienceSegment from '../ExperienceComponents/ExperienceSegment';\nimport SkillSegment from '../SkillsComponents/SkillSegment';\nimport IndexSegment from './IndexSegment';\n\nclass IndexPage extends React.Component{\n    render () {\n\n        return (\n            <Container>\n                <Segment.Group>\n                    <IndexSegment/>\n                    <SkillSegment/>\n                    <ExperienceSegment/>\n                </Segment.Group>\n            </Container>\n        );\n    }\n}\n\nexport default IndexPage;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport IndexPage from './components/IndexComponents/IndexPage';\n\nfunction App() {\n  var root = \"/gettoknowme\";\n\n  return (\n    <Router>\n        <Switch>\n          <Route path={root}>\n            <IndexPage />\n          </Route>\n        </Switch>\n    </Router>  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}